input {
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["logstash-input"]
    codec => json
  }
}

filter { 
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} sshd\[%{NUMBER:pid}\]: (Accepted|Failed) password for (?<user>\w+) from %{IPV4:ip} port %{NUMBER:port} ssh2" }
  }

  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }

  mutate {
    rename => { "hostname" => "host" }
    convert => { "pid" => "integer" }
    add_field => { "login_status" => "%{status}" }
  }
}

filter {
  grok {
    match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:hostname} sudo\[%{NUMBER:pid}\]:\s+%{WORD:user} : TTY=%{DATA:tty} ; PWD=%{DATA:pwd} ; USER=%{WORD:command_user} ; COMMAND=%{GREEDYDATA:command}" }
  }

  if ![command] and ![pwd] and ![user] {
    mutate {
      remove_field => ["command"]
      remove_field => ["pwd"]
      remove_field => ["user"]
    }
  }

  mutate {
    add_field => { "command" => "%{command}" }
    add_field => { "user" => "%{user}" }
    add_field => { "pwd" => "%{pwd}" }
    add_field => { "user_as" => "%{command_user}" }
  }
}

output {
  elasticsearch {
    hosts => ["https://172.24.19.40:9200","https://172.24.19.41:9200","https://172.24.19.42:9200"]
    index => "logstash-logs-%{+YYYY.MM.DD}"
    user => "elastic"
    password => "asd123!@#"
    ssl => true
    ssl_certificate_verification => false
    cacert => "/usr/share/logstash/certs/ca.crt"
  }
}
